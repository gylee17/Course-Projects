## Sakila Database SQL Queries in Python

# importing libraries
import pandas as pd
!pip install pymysql
import pymysql

# DB connection
db_config = {
    "host": "localhost",
    "user": "root",
    "password": "Janeleee17!",
    "database": "sakila"
}

# establish connection
try:
    connection_string = f"mysql+pymysql://{db_config['user']}:{db_config['password']}@{db_config['host']}/{db_config['database']}"
    engine = create_engine(connection_string)
    connection = engine.connect()
    print("Connection to the Sakila database successful.")
except Exception as e:
    print(f"Error connecting to database: {e}")

## 1. List customerâ€™s first and last name where last names are not repeated

query_1 = """
SELECT first_name, last_name
FROM sakila.customer
WHERE last_name IN (
    SELECT last_name
    FROM sakila.customer
    GROUP BY last_name
    HAVING COUNT(*) = 1
);
"""

# query execution & display in DF
df_1 = pd.read_sql(query_1, connection)
df_1

## 2. List each film and the number of actors who are listed for that film

query_2 = """
SELECT f.title AS film, COUNT(fa.actor_id) AS actor_count
FROM sakila.film f
JOIN sakila.film_actor fa ON f.film_id = fa.film_id
GROUP BY f.title;
"""

# query execution & display in DF
df_2 = pd.read_sql(query_2, connection)
df_2

## 3. List top 5 name of actors by most appearance in the films

query_3 = """
SELECT a.first_name, a.last_name, COUNT(fa.film_id) AS appearance_count
FROM sakila.actor a
JOIN sakila.film_actor fa ON a.actor_id = fa.actor_id
GROUP BY a.actor_id
ORDER BY appearance_count DESC
LIMIT 5;
"""

# query execution & display in DF
df_3 = pd.read_sql(query_3, connection)
df_3.head()

## 4. List the top 10 customer first and last name and total paid amount by each customer

query_4 = """
SELECT CONCAT(c.first_name, ' ', c.last_name) AS customer, SUM(p.amount) AS total_paid
FROM sakila.customer c
JOIN sakila.payment p ON c.customer_id = p.customer_id
GROUP BY customer
ORDER BY total_paid DESC
LIMIT 10;
"""

# query execution & display in DF
df_4 = pd.read_sql(query_4, connection)
df_4

## 5. List top 10 cities which generated the most revenue. Order by city name

query_5 = """
SELECT ci.city, SUM(p.amount) AS total_revenue
FROM sakila.city ci
JOIN sakila.address a ON ci.city_id = a.city_id
JOIN sakila.customer c ON a.address_id = c.address_id
JOIN sakila.payment p ON c.customer_id = p.customer_id
GROUP BY ci.city
ORDER BY total_revenue DESC, ci.city
LIMIT 10;
"""

# query execution & display in DF
df_5 = pd.read_sql(query_5, connection)
df_5

# closing connection

connection.close()
print("Database connection closed.")
